#!/bin/bash

# docker machine
dm_start() {
  if [[ $# -eq 0 ]] ; then
    echo "No machine name given"; return;
  fi

  docker-machine start "$1" &&
  eval "$(docker-machine env "$1")"
}

dm_stop() {
  if [[ $# -eq 0 ]] ; then
    docker-machine stop "$(docker-machine active)"
  else
    docker-machine stop "$1"
  fi
}

dm_env() {
  if [[ $# -eq 0 ]] ; then
    eval "$(docker-machine env "$(docker-machine active)")"
  else
    eval "$(docker-machine env "$1")"
  fi
}

dm_ip() {
  if [[ $# -eq 0 ]] ; then
    docker-machine ip "$(docker-machine active)"
  else
    docker-machine ip "$1"
  fi
}

# utils
mcd() {
  if [[ $# -eq 0 ]] ; then
    echo "usage: mcd <directory>"; return -1;
  else
    mkdir -p -- "$1" && cd -P -- "$1" || return;
  fi
}

wake() {
  if [[ ! -a ~/.wakehosts ]]; then
    echo ".wakehosts file not found"; return -1;
  fi

  declare -A hosts

  for line in $(<~/.wakehosts); do
    split=("${(s/=/)line}")
    key=$split[1]
    value=$split[2]
    hosts[$key]=$value
  done

  if [ -z $hosts[$1] ]; then
    echo "unknown host"
  else
    wakeonlan ${hosts[$1]}
  fi
}

watch() {
  case $1 in
  	py | python)
  	  ls *.py | entr -cp python3 \/_
  	;;
  	sh | bash)
  	  ls *.sh | entr -c bash \/_
  	;;
  	js | node)
  	  ls *.js | entr -c node \/_
  	;;
  	rb | ruby)
  	  ls *.rb | entr -c ruby \/_
  	;;
  esac
}

# curl redirects
resolve_redirect() {
  curl -w "%{url_effective}\n" -I -L -s -S $1 -o /dev/null
}

# goto
goto() {
	declare -A paths=(
		aoc ~/code/src/github.com/andreccosta/advent-of-code
		code ~/code
		dot ~/code/src/github.com/andreccosta/dotfiles
		tmp ~/code/tmp
	)

	# partial matches
	matches=(${(Mk)paths:#$1*})

	if [[ ${#matches[@]} -ne ${#paths[@]} &&  ${#matches[@]} -gt 0 ]]; then
		cd $paths[$matches[1]]
	fi
}

