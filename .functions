#!/usr/bin/env bash

# shellcheck disable=SC2034,SC2296

# utils
mcd() {
  if [[ $# -eq 0 ]] ; then
    echo "usage: mcd <directory>"; return 1;
  else
    mkdir -p -- "$1" && cd -P -- "$1" || exit;
  fi
}

wake() {
  if [[ ! -a ~/.wakehosts ]]; then
    echo ".wakehosts file not found"; return 1;
  fi

  if [ -z "$1" ]; then
    echo "no host provided"; return 1;
  fi

  declare -A hosts

  while read -r line; do
    split=("${(s/=/)line}")
    hosts[${split[1]}]=${split[2]}
  done <~/.wakehosts
  
  if [ -z "${hosts[$1]}" ]; then
    echo "unknown host"; return 1;
  else
    wakeonlan "${hosts[$1]}"
  fi
}

wx() {
  case $1 in
    py | python)
      find . -maxdepth 10 -type f -name "*.py" | entr -cp python3 /_
    ;;
    sh | bash)
      find . -maxdepth 10 -type f -name "*.sh" | entr -cp bash /_
    ;;
    js | node)
      find . -maxdepth 10 -type f -name "*.j"s | entr -cp node /_
    ;;
    rb | ruby)
      find . -maxdepth 10 -type f -name "*.rb" | entr -ccp ruby -rdebug /_
    ;;
    cr | crystal)
      find . -maxdepth 10 -type f -name "*.cr" | entr -c crystal run /_
    ;;
    go)
      find . -maxdepth 10 -type f -name "*.go" | entr -c go run /_
    ;;
    spec | specs)
      find . -maxdepth 10 -type f -name "*_spec.rb" | entr -cc bundle exec rspec /_
    ;;
    zig)
      find . -maxdepth 10 -type f -name "*.zig" | entr -ccnp zig run /_
    ;;
  esac
}

until_fail () {
  "$@"
  local exit_status="$?"
  while [ $exit_status -eq "0" ]
  do
    "$@"
    exit_status="$?"
  done
}
